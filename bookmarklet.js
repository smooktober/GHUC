javascript:(async()=>{async function a(t){return new Promise(e=>setTimeout(e,t))}function e(t){const e="abcdefghijklmnopqrstuvwxyz0123456789";let n="";for(let o=0;o<t;o++){const t=Math.floor(Math.random()*e.length);n+=e[t]}return n}async function n(t){const e=document.querySelector('input[name="login"]'),n=document.querySelector('button[type="submit"]');return e&&n&&(e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),await a(1e3),!!document.querySelector(".note")&&!document.querySelector(".color-fg-danger"))}async function o(t){const e=document.querySelector('button[data-disable-invalid][type="submit"]');if(e){e.disabled=!0,e.textContent="Changing...";const n=e.closest('form[data-turbo="false"]');if(n){const e=document.querySelector('input[name="authenticity_token"]'),o=e?e.value:"",c=new FormData(n);return c.append("user[login]",t),c.append("authenticity_token",o),n.submit(),!0}}return!1}async function r(t,e,o,c){let a=[];for(let i=0;i<e;i++){const e=n(t),s=await e;if(s)if("1"===c)a.push(t);else if("2"===c){const e=o(t);if(e)break}await a(o)}if("1"===c&&a.length>0){let t;do{t=prompt(`Available Usernames:\n\n${a.map((t,e)=>`[${e+1}] ${t}`).join("\n")}\n\nSelect a username to copy by providing the numerical selector before it. Note that certain usernames may have been claimed by other GitHub users while the script was still running.`);if(null===t)return;t=parseInt(t,10)}while(isNaN(t)||t<=0||t>a.length);const e=a[t-1],n=document.createElement("button");n.textContent=`Copy "${e}" to clipboard`,n.style.position="fixed",n.style.top="50%",n.style.left="50%",n.style.transform="translate(-50%,-50%)",n.style.zIndex="9999",n.style.padding="10px",n.style.backgroundColor="#007b5e",n.style.color="#fff",n.style.border="none",n.style.borderRadius="5px",n.style.cursor="pointer",n.onclick=async()=>{try{await navigator.clipboard.writeText(e),alert(`Copied "${e}" to clipboard`)}catch(t){alert("Failed to copy to clipboard")}finally{document.body.removeChild(n)}},document.body.appendChild(n)}}function t(){let t;do{t=prompt("Please select the mode:\n1. List (Lists available usernames that meet the specifications after the desired number of usernames has been checked)\n2. Autochange (Automatically changes the username to the first available username that meets the specifications)");if(null===t)return}while("1"!==t&&"2"!==t);return t}function c(){let t,e,o;do{t=prompt("Please enter the number of characters for the username (Usernames with more characters are usually easier to claim):");if(null===t)return}while(!t||0===parseInt(t,10));do{e=prompt("Please enter the number of usernames to generate and check (If you are using the autochange mode, the first available username will be used):");if(null===e)return}while(!e||0===parseInt(e,10));do{o=prompt("Please enter the delay in milliseconds between username checks (800-1000 is the most accurate for a wide range of devices, while lower numbers may be suitable for powerful systems):");if(null===o)return}while(!o||0===parseInt(o,10));return{usernameLength:parseInt(t,10),usernamesToTry:parseInt(e,10),delay:parseInt(o,10)}}if("https://github.com/settings/admin"!==window.location.href)return void alert("This script should be run at https://github.com/settings/admin. You will now be redirected.");let i;do{i=t();if(null===i)return}while(null===i);let s;do{s=c();if(null===s)return}while(null===s);await r(s.usernameLength,s.usernamesToTry,s.delay,i)})();
